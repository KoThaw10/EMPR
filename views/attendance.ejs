<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="https://unpkg.com/boxicons@2.0.9/css/boxicons.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" />
    <link href='https://unpkg.com/boxicons@2.0.9/css/boxicons.min.css' rel='stylesheet'>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css"/>
    
    <link rel="stylesheet" href="/attendance.css">
    <title>Attendance</title>
</head>

<body>
    <section id="attendance">
        <main>
            <div class="container">
                <div class="table-wrapper">
                    <div class="table-title">
                        <div class="row">
                            <div class="col-sm-8">
                                <h1>Attendance Details</h1>
                                <ul class="breadcrumb">
                                    <li>
                                        <a href="/attendance">Attendance</a>
                                    </li>
                                    <li><i class='bx bx-chevron-right'></i></li>
                                    <li>
                                        <a class="active" href="/dashboard">Home</a>
                                    </li>
                                </ul>
                            </div>
                            <div class="col-sm-4">
                                <button class="import" onclick="importData()">Import Data</button>
                                <input class="input" type="file" id="fileInput" accept=".xlsx"><br>
                            </div>
                        </div>
                    </div>
                    <div>
                    <input type="text" id="nameSearch" placeholder="Search by Name" oninput="searchData()">
                    </div>
                    <div class="search-options">
                        <!-- Monthly and Annual search dropdowns -->
                        <select id="monthSelector">
                            <option value="">Select Month</option>
                            <option value="01">January</option>
                            <option value="02">February</option>
                            <option value="03">March</option>
                            <option value="04">April</option>
                            <option value="05">May</option>
                            <option value="06">June</option>
                            <option value="07">July</option>
                            <option value="08">August</option>
                            <option value="09">September</option>
                            <option value="10">October</option>
                            <option value="11">November</option>
                            <option value="12">December</option>
                        </select>

                        <select id="yearSelector">
                            <option value="">Select Year</option>
                            <option value="2023">2021</option>
                            <option value="2024">2022</option>
                            <option value="2025">2023</option>
                            <!-- Add more years as needed -->
                        </select>

                        <!-- Combined search button -->
                        <button onclick="searchData()">Search</button>
                    </div>
                    <table class="table" id="attendance" style="font-size: x-small;">
                        <thead>
                            <tr>
                                <th>Employee ID</th>
                                <th>Employee Name</th>
                                <th>Casual Leave</th>
                                <th>Medical Leave</th>
                                <th>Maternity Leave</th>
                                <th>Marriage Leave</th>
                                <th>Value of Casual Leave</th>
                                <th>Value of Medical Leave</th>
                                <th>Value of Maternity Leave</th>
                                <th>Value of Marriage Leave</th>
                                <th>Attendance</th>
                                <th>Total Attendance</th>
                            </tr>
                        </thead>
                        <tbody>
                            <!-- Table rows will be added dynamically -->
                        </tbody>
                    </table>
                </div>
            </div>
        </main>
        <!-- PAY Button -->
        <!-- pay pop up box -->
        <div class="modal-edit" id="modal">
            <div class="modal-header">
                <div class="title">Employee Paycheck</div>
                <button onclick=closeModal() class="close-button">&times;</button>
              </div>
              <div class="modal-body">
                <form id="employeeForm">
                    <div class="formGroup">
                      <h3>Employee Information</h3>
                    </div>
    
                    <div class="formGroup">
                      <label for="employeeID">Employee ID:</label>
                      <!-- <input type="text" id="employee_id" name="employee_id" required> -->
                    </div>
      
                    <div class="formGroup">
                        <label for="employeeName">Employee Name:</label>
                        <!-- <input type="text" id="employee_name" name="employee_name" required> -->
                    </div>
        
                    <div class="formGroup">
                      <label for="position">Position:</label>
                      <!-- <input type="text" id="position" name="position" required> -->
                    </div>
      
                    <div class="formGroup">
                      <label for="employeeDep">Department:</label>
                      <!-- <input type="text" id="department_id" name="department_id" required> -->
                    </div>
        
                    <div class="formGroup">
                      <h3>Paycheck</h3>
                    </div>
    
                    <div class="formGroup">
                      <label for="basicSalary"> Basic Salary:</label>
                    </div>
        
                    <div class="formGroup">
                        <label for="leave" id="#">Leave:</label>
                    </div>
    
                    <div class="formGroup">
                      <label for="deduction" id="#">Deducted Amount:</label>
                  </div>
        
                    <div class="formGroup">
                        <label for="tax" id="">Tax:</label>
                    </div>
    
    
                    <div class="formGroup">
                      <h3>Total: </h3>
                    </div>
                  
                    <div class="formGroup">
                      <button type="submit">Update</button>
                      <button type="button" onclick=closeModal() data-close-button id="cancelButton">Cancel</button>
                    </div>
                </form>
              </div>
        </div>
        <div id="overlay"></div>
        <!-- end of pay pop up box -->
        <!-- End of pay BUTTON -->
    </section>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.18.4/xlsx.full.min.js"></script>
    <script>
        let importedData = [];

        function importData() {
            const fileInput = document.getElementById("fileInput");
            const attendanceTable = document.getElementById("attendance")

            if (fileInput.files.length === 0) {
                alert('Please select an Excel file before importing.');
                return;
            }
        
            const file = fileInput.files[0];
            const formData = new FormData();
            formData.append('excelFile', file);
        
            fetch('/upload', {
                method: 'POST',
                body: formData
            })
            .then(response => response.json())
            .then(data => {
                // Handle the data from the server and display
                showData(data)
            })
            .catch(error => {
                console.error('Error:', error);
            });
            
        }

        function showData(data){
            const attendanceTable = document.getElementById("attendance")
            // Clear the existing table body.
            attendanceTable.getElementsByTagName("tbody")[0].innerHTML = "";


            // Create a new table body and populate it with the data from the Excel file.
            const tbody = attendanceTable.getElementsByTagName("tbody")[0];
            data.data.forEach(item => {
                const row = document.createElement("tr");
                for (const key in item) {
                    const cell = document.createElement("td");
                    cell.textContent = item[key];
                    row.appendChild(cell);
                }
                const payCell = document.createElement("td");
                        const payButton = document.createElement("button");
                        payButton.id = 'payButton';
                        payButton.dataset.modalTarget = '#modal'; // Set the data-modal-target attribute
                        payButton.type = 'paybutton'; // Set the type attribute
                        payButton.className = 'btn btn-info';
                        payButton.textContent = 'Pay';

                        payButton.addEventListener('click', function () {
                            const closestRow = this.closest('tr');
                            openModal(this.dataset.modalTarget, closestRow); // Pass the data to the openModal function
                            
                        });

                        payCell.appendChild(payButton);
                        row.appendChild(payCell);
                tbody.appendChild(row);
            });
        }

        function searchData() {
            const selectedMonth = document.getElementById("monthSelector").value;
            const selectedYear = document.getElementById("yearSelector").value;
            const nameToSearch = document.getElementById("nameSearch").value.toLowerCase();

            const tbody = document.getElementById("attendance").getElementsByTagName("tbody")[0];
            const rows = tbody.getElementsByTagName("tr");

            for (let i = 0; i < rows.length; i++) {
                const row = rows[i];
                const columns = row.getElementsByTagName("td");
                const attendanceDate = columns[10].textContent;
                const yearPart = attendanceDate.substring(0, 4);
                const monthPart = attendanceDate.substring(5, 7);
                const employeeName = columns[1].textContent.toLowerCase();

                const isNameMatch = nameToSearch === "" || employeeName.includes(nameToSearch);
                const isMonthMatch = selectedMonth === "" || monthPart === selectedMonth;
                const isYearMatch = selectedYear === "" || yearPart === selectedYear;

                if (isNameMatch && isMonthMatch && isYearMatch) {
                    row.style.display = "table-row";
                } else {
                    row.style.display = "none";
                }
            }
        }


        function payFunction(emp_id){
            openModal
        }

        const overlay = document.getElementById('overlay');
        
        // Function to open the modal
        function openModal(target, data) {
            const empId = data.cells[0].textContent
            const month = data.cells[12].textContent
            const year = data.cells[13].textContent

            const requestData = {
                empId: empId,
                month: month,
                year: year
            }

            const result = getPayCheck(requestData)

            const modal = document.querySelector(target);
            console.log(modal)
            if (modal) {
                console.log('enter')
                modal.classList.add('active')
                overlay.classList.add('active')
        
            }
        }

        function getPayCheck(data){
            fetch('/getPayCheck', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                    // Add any other headers as needed
                },
                body: JSON.stringify(data)
            })
                .then(response => {
                    if (response.ok) {
                        return response.json()// Request was successful, you can handle the response here
                    } else {
                        // Request failed, handle the error
                        console.error('Error:', response.status, response.statusText);
                    }
                })
                .catch(error => {
                    // Handle network errors
                    console.error('Network error:', error);
                });
        }        


        // Function to close the modal
        function closeModal() {
            const modal = document.getElementById('modal')
            modal.classList.remove('active')
            overlay.classList.remove('active')
        }

        

    </script>
</body>

</html>
